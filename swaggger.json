{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.2",
    "title": "Swagger S.W.A.T Wallet",
    "description": "It's Bible of API S.W.A.T Wallet based on OpenAPI 3.0.1"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "servers": [
    {
      "url": "http://localhost:3001"
    },
    {
      "url": "https://wallet-project-m5us.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "Users endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    }
  ],
  "paths": {
    "/api/user/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/user/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/user/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user's data by access token",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/user/": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Delete user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Delete's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a new transaction",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Create object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatedTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/getAll": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all user transactions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "The numbers of items to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllTransactions"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/categories": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get all categories and their id",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategory"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/statistics": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get statistics of income and expenses by category for a period of time.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "integer"
            },
            "description": "The year to get the statistics from, a number from 1970 to the current year's value. The default is the current year. The default is the current month."
          },
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "integer"
            },
            "description": "Ordinal number of the month, from 1 to 12. Optional. If the year is not passed, it defaults to the current month."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatistics"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/": {
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete a transaction by id.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Numeric id of the transaction to delete"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id format",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/test": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Automatic creation of user test transactions",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "integer",
              "default": 2022
            },
            "description": "Year of transaction, from 1970 to the present."
          },
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "integer",
              "default": 11
            },
            "description": "The initial month of creating transactions, from 1 to 12."
          },
          {
            "in": "query",
            "name": "day",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Day of creation of the first transaction, from 1 to 30 (28 / 29 / 31)."
          },
          {
            "in": "query",
            "name": "number",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Number of transactions to create"
          },
          {
            "in": "query",
            "name": "sum",
            "schema": {
              "type": "integer"
            },
            "description": "Sets the balance for the user before starting to create transactions."
          }
        ],
        "responses": {
          "201": {
            "description": "Successful created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedTestTransactions"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid Date)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Taras Shevchenko"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Taras Shevchenko"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            }
          }
        },
        "example": {
          "name": "Taras Shevchenko",
          "email": "example@gmail.com"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOGM5YjlmZjk0NzA1ODkwMDdkNjgzMiIsImlhdCI6MTY3MDE2OTc4NiwiZXhwIjoxNjcwNDI4OTg2fQ.9UZpIe3YnRQBabhNLENrqQ2bkoTvDgH7WZMCaIVWBKc"
          }
        }
      },
      "DeleteRequest": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "DeleteResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "message",
              "example": "example@example.com was deleted"
            }
          }
        },
        "example": {
          "message": "example@example.com was deleted"
        }
      },
      "CurrentUserResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Taras Shevchenko"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            }
          }
        },
        "example": {
          "name": "Taras Shevchenko",
          "email": "example@gmail.com"
        }
      },
      "CreatedTransactionRequest": {
        "type": "object",
        "required": [
          "type",
          "amount",
          "category",
          "date"
        ],
        "properties": {
          "type": {
            "type": "boolean",
            "description": "'true' - Incomes; 'false' - Expenses",
            "example": true
          },
          "comment": {
            "type": "string",
            "description": "Clasification of the transaction",
            "example": "Additional income"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": 485.2
          },
          "category": {
            "type": "number",
            "description": "Transaction category identifier",
            "example": 10502
          },
          "date": {
            "type": "number",
            "description": "Transaction creation date, ms",
            "example": 1670170243028
          }
        },
        "example": {
          "type": true,
          "comment": "Additional income",
          "amount": 485.2,
          "category": 10502,
          "date": 1670170243028
        }
      },
      "CreatedTransactionResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Transaction identifier",
            "example": "638b5a9ce8c94bc23ceefb32"
          },
          "owner": {
            "type": "string",
            "description": "The ID of the owner of the transaction",
            "example": "638a338f9a43639507e794e4"
          },
          "type": {
            "type": "boolean",
            "description": "'true' - Incomes; 'false' - Expenses",
            "example": true
          },
          "category": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Category object ID, internal identifier",
                "example": "638b5a9ce8c94bc23ceefb32"
              },
              "id": {
                "type": "number",
                "description": "Category ID",
                "example": 10502
              },
              "name": {
                "type": "string",
                "description": "Category name",
                "example": "Inregular Income"
              }
            }
          },
          "comment": {
            "type": "string",
            "description": "Clasification of the transaction",
            "example": "Additional income"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": 485.2
          },
          "balance": {
            "type": "number",
            "description": "Current transaction balance",
            "example": 3344.55
          },
          "date": {
            "type": "number",
            "description": "Transaction creation date, ms",
            "example": "2022-12-03T14:18:04.624+00:00"
          }
        },
        "example": {
          "_id": "638b5a9ce8c94bc23ceefb33",
          "owner": "638a338f9a43639507e794e4",
          "type": true,
          "category": {
            "id": 10502,
            "name": "Inregular Income",
            "_id": "638b5a9ce8c94bc23ceefb33"
          },
          "comment": "Additional income",
          "amount": 8750,
          "balance": 3344.55,
          "date": "2022-12-03T14:18:04.624+00:00"
        }
      },
      "GetAllTransactions": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "description": "Total number of transactions",
            "example": 256
          },
          "transactions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Transaction identifier",
                  "example": "638b5a9ce8c94bc23ceefb32"
                },
                "owner": {
                  "type": "string",
                  "description": "The ID of the owner of the transaction",
                  "example": "638a338f9a43639507e794e4"
                },
                "type": {
                  "type": "boolean",
                  "description": "'true' - Incomes; 'false' - Expenses",
                  "example": true
                },
                "category": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Category ID",
                      "example": 10502
                    },
                    "name": {
                      "type": "string",
                      "description": "Category name",
                      "example": "Inregular Income"
                    }
                  }
                },
                "comment": {
                  "type": "string",
                  "description": "Clasification of the transaction",
                  "example": "Additional income"
                },
                "amount": {
                  "type": "number",
                  "description": "Transaction amount",
                  "example": 485.2
                },
                "balance": {
                  "type": "number",
                  "description": "Current transaction balance",
                  "example": 3344.55
                },
                "date": {
                  "type": "number",
                  "description": "Transaction creation time",
                  "example": "2022-12-03T14:18:04.624+00:00"
                }
              }
            }
          }
        },
        "example": {
          "quantity": 256,
          "transactions": [
            {
              "_id": "638f9d3524ab55cf14173279",
              "owner": "638f9a8324ab55cf1417326e",
              "type": false,
              "category": {
                "id": 10101,
                "name": "Main expences"
              },
              "comment": "Additional income",
              "amount": 0.6,
              "balance": 1999.4,
              "date": "2022-12-03T14:18:04.624+00:00"
            },
            {
              "_id": "638fa12ae80b879f93f19a71",
              "owner": "638f9a8324ab55cf1417326e",
              "type": true,
              "category": {
                "id": 10502,
                "name": "Inregular Income"
              },
              "comment": "Additional income",
              "amount": 5000.6,
              "balance": 7000,
              "date": "2022-12-03T14:20:07.624+00:00"
            },
            {
              "_id": "638fb3b02784590e5d36cfe0",
              "owner": "638f9a8324ab55cf1417326e",
              "type": false,
              "category": {
                "id": 10102,
                "name": "Inregular Income"
              },
              "comment": "Products",
              "amount": 2500,
              "balance": 4500,
              "date": "2022-12-03T14:22:01.624+00:00"
            }
          ]
        }
      },
      "GetCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Transaction Category ID",
            "example": 10501
          },
          "name": {
            "type": "string",
            "description": "The name of the transaction category",
            "example": "Regular Income"
          }
        },
        "example": [
          {
            "id": "10101",
            "name": "Main expences"
          },
          {
            "id": "10102",
            "name": "Products"
          },
          {
            "id": "10103",
            "name": "Car"
          }
        ]
      },
      "GetStatistics": {
        "type": "object",
        "properties": {
          "stats": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "Transaction Category ID",
                  "example": 10501
                },
                "name": {
                  "type": "string",
                  "description": "The name of the transaction category",
                  "example": "Regular Income"
                },
                "quantity": {
                  "type": "number",
                  "description": "Expenses for the period in this category",
                  "example": 1536.16
                }
              }
            }
          },
          "totalStats": {
            "type": "object",
            "properties": {
              "expenses": {
                "type": "number",
                "description": "Expenses for the period",
                "example": 5670.59
              },
              "income": {
                "type": "number",
                "description": "Income for the period",
                "example": 25443.15
              }
            }
          }
        },
        "example": {
          "stats": [
            {
              "id": 10102,
              "name": "Products",
              "quantity": 1536.16
            },
            {
              "id": 10103,
              "name": "Car",
              "quantity": 2174.35
            },
            {
              "id": 10106,
              "name": "Household products",
              "quantity": 1960.08
            }
          ],
          "totalStats": {
            "expenses": 5670.59,
            "income": 18443.15
          }
        }
      },
      "DeleteTransactionResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Transaction identifier",
            "example": "638b5a9ce8c94bc23ceefb32"
          },
          "owner": {
            "type": "string",
            "description": "The ID of the owner of the transaction",
            "example": "638a338f9a43639507e794e4"
          },
          "type": {
            "type": "boolean",
            "description": "'true' - Incomes; 'false' - Expenses",
            "example": true
          },
          "category": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Category object ID, internal identifier",
                "example": "638b5a9ce8c94bc23ceefb32"
              },
              "id": {
                "type": "number",
                "description": "Category ID",
                "example": 10502
              },
              "name": {
                "type": "string",
                "description": "Category name",
                "example": "Inregular Income"
              }
            }
          },
          "comment": {
            "type": "string",
            "description": "Clasification of the transaction",
            "example": "Additional income"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": 485.2
          },
          "balance": {
            "type": "number",
            "description": "Current transaction balance",
            "example": 3344.55
          },
          "date": {
            "type": "number",
            "description": "Transaction creation date, ms",
            "example": "2022-12-03T14:18:04.624+00:00"
          }
        },
        "example": {
          "_id": "638b5a9ce8c94bc23ceefb33",
          "owner": "638a338f9a43639507e794e4",
          "type": true,
          "category": {
            "id": 10502,
            "name": "Inregular Income",
            "_id": "638b5a9ce8c94bc23ceefb33"
          },
          "comment": "Additional income",
          "amount": 8750,
          "balance": 3344.55,
          "date": "2022-12-03T14:18:04.624+00:00"
        }
      },
      "CreatedTestTransactions": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The operation was successful",
            "example": "Success"
          }
        },
        "example": {
          "message": "Success"
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}